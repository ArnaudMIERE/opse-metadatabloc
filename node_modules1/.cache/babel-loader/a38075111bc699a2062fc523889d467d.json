{"remainingRequest":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-data-netcdf-block/opse-data-netcdf-block.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-data-netcdf-block/opse-data-netcdf-block.vue","mtime":1644331050199},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/babel.config.js","mtime":1644331050195},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","data","files","datasetFile","datasetFileInput","search","dataFile","fileName","deletionDialog","deletionDialogAll","headers","text","value","sortable","notifier","notifierMessage","notifierColor","timeout","props","language","type","default","theme","primaryColor","secondaryColor","service","downloadUrl","metadata","computed","applyTheme","isVisible","programmaticScrollingTitle","links","disableConfirmUpload","console","watch","created","methods","confirmDeletion","file","loadData","url","method","then","catch","finally","confirmeDelete","deleteAll","upload","displayError","message","displaySuccess"],"sourceRoot":"src/lib/modules/opse-data-netcdf-block","sources":["opse-data-netcdf-block.vue"],"sourcesContent":["<i18n  >\n{\n  \"en\": {\n       \"opseDataList\":\"Files List\",\n       \"opseConvert\": \"Convert NetCDF\",\n       \"opseDelete\": \"Delete\",\n       \"opseConfirmation\": \"Confirmation\",\n       \"opseConfirmationDelete\": \"Do you confirm this deletion ?\",\n       \"opseConfirmationDeleteAll\": \"Do you confirm deletion of all files ?\",\n       \"opseConfirm\": \"Confirm\",\n       \"opseCancel\": \"Cancel\",\n       \"opseSelectFile\": \"Select files\",\n       \"opseListFile\": \"List of files\",\n       \"opseUpload\": \"Upload\"\n  },\n  \"fr\": {\n      \"opseDataList\": \"Liste de fichiers\",\n      \"opseConvert\": \"Convertir NetCDF\",\n      \"opseDelete\": \"Supprimer\",\n      \"opseConfirmation\": \"Confirmation\",\n      \"opseConfirmationDelete\": \"Confirmez-vous cette suppression ?\",\n      \"opseConfirmationDeleteAll\":\"Confirmez-vous la suppression de tous les fichiers ?\",\n      \"opseConfirm\": \"Confirmer\",\n      \"opseCancel\": \"Annuler\",\n      \"opseSelectFile\": \"Sélectionnez des fichiers\",\n      \"opseListFile\": \"Liste de fichiers\",\n      \"opseUpload\": \"Upload\"\n  }\n}\n</i18n>\n\n<template>\n\n<v-app class=\"transparent\">\n\n  <v-dialog v-model=\"deletionDialog\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"d-flex justify-space-between blue-grey lighten-5\"> <span class=\"headline\">{{ $t('opseConfirmation') }}</span>\n        <v-btn fab text @click=\"deletionDialog = false\" > <v-icon>mdi-close</v-icon> </v-btn></v-card-title>\n        <v-card-text>{{ $t('opseConfirmationDelete') }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn small outlined color=\"success\"   @click=\"confirmeDelete()\">{{$t('opseConfirm')}}</v-btn>\n          <v-btn small outlined color=\"error\"   @click=\"deletionDialog = false\">{{$t('opseCancel')}}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog v-model=\"deletionDialogAll\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"d-flex justify-space-between blue-grey lighten-5\"> <span class=\"headline\">{{ $t('opseConfirmation') }}</span>\n        <v-btn fab text @click=\"deletionDialogAll = false\" > <v-icon>mdi-close</v-icon> </v-btn></v-card-title>\n        <v-card-text>{{ $t('opseConfirmationDeleteAll') }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn small outlined color=\"success\"   @click=\"deleteAll()\">{{$t('opseConfirm')}}</v-btn>\n          <v-btn small outlined color=\"error\"   @click=\"deletionDialogAll = false\">{{$t('opseCancel')}}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-card max-width=\"600\">\n      <v-card-title><v-icon large left style=\"color:#F39C12\">mdi-hand-pointing-right</v-icon>{{$t('opseSelectFile')}}</v-card-title>\n      <v-file-input  show-size outlined counter multiple prepend-icon=\"mdi-upload\"  label=\"File input\" :value=\"datasetFileInput\" v-model=\"files\">\n        <template v-slot:selection=\"{ text }\">\n      <v-chip\n        small\n        label\n        color=\"warning\"\n      >\n        {{ text }}\n      </v-chip>\n    </template>\n      </v-file-input>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n          <v-btn color=\"success\"  @click=\"upload()\"><v-icon dark left title=\"Upload\">mdi-folder-upload</v-icon>{{$t('opseUpload')}}</v-btn>\n      </v-card-actions>\n    </v-card>\n    <br/>\n<v-snackbar v-model=\"notifier\" top :color=\"notifierColor\" :timeout=\"timeout\"  >\n      {{ notifierMessage }}\n      <v-btn text @click=\"notifier = false\" > <v-icon>mdi-close</v-icon> </v-btn>\n</v-snackbar>\n\n    <v-card v-if=\"isVisible\" :style=\"applyTheme\" max-width=\"600\">\n    <v-card-title>\n        <v-icon large left style=\"color:#F39C12\">mdi-file</v-icon>{{$t('opseListFile')}}\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n    </v-card-title>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"dataFile\"\n      :search=\"search\"\n      class=\"elevation-1\"\n    >\n    \n\n    <template v-slot:item=\"{item}\">\n        <tr>\n            <td class=\"dense text-xs-left\">\n                {{item.name}}\n                <span></span>\n            </td>\n            <td>\n                <v-btn small outlined color=\"success\">{{ $t('opseConvert') }}</v-btn>\n\n                <v-btn icon @click=\"confirmDeletion(item.name)\"><v-icon color=\"error\" title=\"Delete\" >  mdi-trash-can </v-icon></v-btn>\n            </td>\n        </tr>\n    </template>\n    \n    \n    \n    </v-data-table>\n    <v-card-actions>\n          <v-spacer></v-spacer>\n     <v-btn color=\"error\" dark @click=\"deletionDialogAll=true\"> <v-icon dark left title=\"Delete all\" @click=\"deletionDialogAll=true\">  mdi-trash-can </v-icon>{{$t('opseDelete')}}</v-btn>\n    </v-card-actions>\n  </v-card>\n  </v-app>\n  \n</template>\n\n\n<script>\nimport { applyPrimaryAndSecondaryColors } from \"../../utils\";\nexport default {\n    name: \"opse-data-netcdf-block\",\n    data() {\n        return{\n        files: [],\n        datasetFile: null,\n        datasetFileInput: \"\",\n        search: '',\n        dataFile:[],\n        fileName:'',\n        deletionDialog:false,\n        deletionDialogAll: false,\n        headers: [\n        { text: \"Files\", value: \"name\"},\n        { text: \"Actions\", value: \"action\", sortable: false }\n        ],\n        notifier: false,\n        notifierMessage: '',\n        notifierColor: 'success',\n        timeout:2000\n\n        }\n    },\n\n    props: {\n    language: {\n      type: String,\n      default: \"en\"\n    },\n    theme: {\n      type: Object,\n      default: () => {\n        return {        \n        primaryColor: \"#F39C12\",\n        secondaryColor: \"#AAA\"};\n      }\n    },\n    service: null,\n    downloadUrl: null,\n    metadata: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    \n  },\n\n  computed: {\n      \n    applyTheme() {\n      return applyPrimaryAndSecondaryColors(this.theme);\n    },\n\n    isVisible() {\n        let isVisible = false\n        if(this.links != null && this.links.length > 0) {\n            isVisible = true\n        }\n        this.$emit(\"getVisibility\", {\n        name: this.$options.name,\n        programmaticScrollingTitle: this.$t(\"opseDataList\"),\n        isVisible\n        });\n        return isVisible;\n    },\n\n    links() {\n        let links = []\n        if(this.metadata && this.metadata.links && this.metadata.links.length > 0) {\n            for(let i=0 ; i < this.metadata.links.length ; i++) {\n                if(this.metadata.links[i].type == 'OPENSEARCH_LINK') {\n                    links.push(this.metadata.links[i])\n                }\n            }\n        }\n        return links\n    },\n\n    disableConfirmUpload() {\n      if (this.files){\n        console.log(\"this.files \",this.files)\n        return true;\n      }\n      return false;\n      \n    },\n  },\n\n  watch: {\n    language(value) {\n      this.$i18n.locale = value;\n    },\n    metadata(){\n        this.loadData();\n    }\n  },\n\n  created() {\n   this.$i18n.locale = this.language;\n   this.loadData();\n  },\n\n  methods: {\n\n    confirmDeletion(file) {\n    this.fileName = file,\n    this.deletionDialog = true\n  },\n\n      loadData() {\n      let url = null\n        if(this.metadata && this.metadata.links && this.metadata.links.length > 0) {\n            for(let i=0 ; i < this.metadata.links.length ; i++) {\n                if(this.metadata.links[i].type == 'OPENSEARCH_LINK') {\n                    url = this.metadata.links[i].url\n                    break\n                }\n            }\n        }\n        this.url = url;\n        if (url == null) {\n          return\n        }\n\n      this.loading = true\n      this.axios({\n        method: \"get\",\n        url: this.url + \"dataFiles?collection=\"+this.metadata.id,\n      }).then(response => {\n          if (response){\n        this.dataFile = response.data\n        \n        console.log(\"Liste de fichiers\",response.data)\n        \n          }\n      }).catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n\n    },\n\n    confirmeDelete(){\n      console.log(this.url + \"delete?collection=\"+this.metadata.id+\"&fileName=\"+this.fileName)\n      this.axios({\n        method: \"delete\",\n        url: this.url + \"delete?collection=\"+this.metadata.id+\"&fileName=\"+this.fileName,\n      }).then(response => {\n        if (response)\n          this.displaySuccess(\"File deleted\")\n          this.loadData();\n          this.deletionDialog=false\n      }).catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n\n    },\n\n    deleteAll(){\n      console.log(this.url + \"delete\")\n      this.axios({\n        method: \"delete\",\n        url: this.url + \"deleteAll?collection=\"+this.metadata.id,\n      }).then(response => {\n        if (response)\n          this.displaySuccess(\"Files deleted\")\n          this.loadData();\n          this.deletionDialogAll=false\n      }).catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n\n    },\n\n      \n    upload(){\n      if (this.files){\n        this.datasetFile = new FormData();\n        for (var i=0; i<this.files.length; i++){\n          this.datasetFile.append(\"file\", this.files[i])\n        }\n      \n    \n      this.axios({\n        method: \"post\",\n        url: this.url + \"upload?collection=\"+this.metadata.id,\n        data:this.datasetFile,\n        headers: {'Content-Type': 'multipart/form-data' }\n      }).then(response => {\n        if (response)\n          this.displaySuccess(\"File uploaded\")\n          this.loadData();\n          this.datasetFileInput = \"\";\n          \n      }) \n      \n      .catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n    }\n    },\n    \n\n    displayError(message){\n        this.notifierMessage = message\n        this.notifierColor = 'error'\n          this.timeout=2000\n          this.notifier = true\n    },\n\n    displaySuccess(message){\n        this.notifierMessage = message\n        this.notifierColor = 'success'\n        this.timeout=2000\n        this.notifier = true\n    }\n\n  }\n}\n</script>\n"]}]}
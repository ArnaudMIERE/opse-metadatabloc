{"remainingRequest":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-galery-images-displayed-block/opse-galery-images-displayed-block.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-galery-images-displayed-block/opse-galery-images-displayed-block.vue","mtime":1648119391902},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/babel.config.js","mtime":1644331050195},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACAA,4CADA;AAGAC,MAHA,kBAGA;AACA;AACAC,uBADA;AAEAC,eAFA;AAGAC,gBAHA;AAIAC,wCAJA;AAKAC,eALA;AAMAC,8BANA;AAOAC,cAPA;AAQAC,aARA;AASAC,oBATA;AAUAC,wBAVA;AAWAC,eAXA;AAYAC,mBAZA;AAaAC,kBAbA;AAcAC;AAdA;AAgBA,GApBA;AAsBAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAC;AACA;AACAE,iCADA;AAEAC;AAFA;AAIA;AAPA,KALA;AAeAC;AACAL,kBADA;AAEAC;AACA;AACA;AAJA;AAfA,GAtBA;AA6CAK;AACAC,cADA,wBACA;AACA;AACA,KAHA;AAKAC,aALA,uBAKA;AACA;;AACA;AACAA;AACA;;AAEA;AACA1B,gCADA;AAEA2B,2DAFA;AAGAD;AAHA;AAKA;AACA,KAjBA;AAmBAE,mBAnBA,6BAmBA;AACA;AACA;AACA;;AACA;AACA,KAxBA;AAyBAC,SAzBA,mBAyBA;AACA;;AACA;AACA;AACA;AA7BA,GA7CA;AA6EAC;AACAP,YADA,sBACA;AACA;AACA,KAHA;AAIAN,YAJA,oBAIAc,KAJA,EAIA;AACA;AACA;AANA,GA7EA;AAsFAC,SAtFA,qBAsFA;AACA,sCADA,CAEA;;AACA;AACA;AACA;AACA,GA5FA;AA8FAC;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAKAC,YALA,sBAKA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KAdA;AAeAC,cAfA,sBAeAC,SAfA,EAeA;AACA;;AACA;;AACA;;AACAC;AACAA;AACAA;AACA,KAtBA;AAwBAC,YAxBA,oBAwBAjC,GAxBA,EAwBA;AAAA;;AACA;AACA;AACA;AACA;AACAkC,qBADA;AAEAlC;AAFA,SAIAmC,IAJA,CAIA;AACAC;AACA;AACA;AACA;AACA,OATA,EAUAC,KAVA,CAUA;AACA;AACA;AACAD;AACAE;AACA,OAfA,EAgBAC,OAhBA,CAgBA;AACA;AACA,OAlBA;AAmBA,KA/CA;AAiDAC,eAjDA,uBAiDAC,KAjDA,EAiDA;AACA;AACAC,kBACA,WACA,kCADA,GAEA,gBAFA,GAGA,UAHA,GAIAD,KALA;AAOA,KA1DA;AA2DAE,iBA3DA,yBA2DAF,KA3DA,EA2DA;AACA;AACAC,kBACA,WACA,qCADA,GAEA,gBAFA,GAGA,SAHA,GAIAD,KALA;AAOA,KApEA;AAsEAG,aAtEA,uBAsEA;AAAA;;AACA;AACA;;AACA,UACA,iBACA,mBADA,IAEA,8BAHA,EAIA;AACA;AACA;AACA5C;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AAEA;AACAsC,kBACA,MADA,EAEA,WACA,kCADA,GAEA,gBAFA,GAGA,UAHA,GAIAO,MANA;AAQA;AACAX,qBADA;AAEAlC,aACA,WACA,kCADA,GAEA,gBAFA,GAGA,UAHA,GAIA6C,MAPA,CAQA;;AARA,SAUAV,IAVA,CAUA;AACA;AACA;AACA;AACA;AACAG;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,4BACA,wDADA;;AAGA;AACA;;AACA;;AACA;;AACA;AACA,OAhCA,EAiCAD,KAjCA,CAiCA;AACA;AACAC;AACA,OApCA,EAqCAC,OArCA,CAqCA;AACA;AACA,OAvCA;AAwCA;AA3IA;AA9FA","names":["name","data","dataPolicy","years","params","currentStatus","url","folderFile","urls","page","itemsPages","itemsNamePages","items","itemsName","listCount","pageSize","props","language","type","default","theme","primaryColor","secondaryColor","metadata","computed","applyTheme","isVisible","programmaticScrollingTitle","downloadAllowed","pages","watch","value","created","methods","file","initPage","updatePage","pageIndex","_this","download","method","then","self","catch","console","finally","downloadAll","index","window","downloadImage","loadImage","format"],"sourceRoot":"src/lib/modules/opse-galery-images-displayed-block","sources":["opse-galery-images-displayed-block.vue"],"sourcesContent":["<i18n  >\n{\n  \"en\": {\n    \"opseAccessData\": \"Data visualization\",\n    \"opseDownload\": \"Download\",\n    \"explicationText\": \"Select the years you want to download (all years are selected by default).\",\n    \"explicationTextParams\": \"Select the params you want to download (all params are selected by default).\",\n    \"year\": \"Year\",\n    \"param\": \"Parameter\",\n    \"downloadAll\": \"Download All years\",\n    \"downloadSelected\": \"Download selected years\",\n    \"opseAlert\":\"No data available yet.\"        \n\n  },\n  \"fr\": {\n    \"opseAccessData\": \"Visualisation des données\",\n    \"opseDownload\": \"Téléchargement\",\n    \"explicationText\": \"Selectionnez les années que vous voulez télécharger (toutes les années sont sélectionées par défaut).\",\n    \"explicationTextParams\": \"Selectionnez les paramètres que vous voulez télécharger (tous les paramètres sont sélectionés par défaut).\",\n    \"year\": \"Année\",\n    \"param\": \"Parametre\",\n    \"downloadAll\": \"Télécharger\",\n    \"downloadSelected\": \"Télécharger la sélection\",\n    \"opseAlert\":\"Aucune donnée n'est encore disponible.\"\n    \n\n  }\n}\n</i18n>\n\n<template>\n  <div>\n    <v-card v-if=\"isVisible\" :style=\"applyTheme\" :flat=\"true\">\n      <v-card-title>\n        <v-icon large left style=\"color: #f39c12\">mdi-database</v-icon>\n        <span>{{ $t(\"opseAccessData\") }}</span>\n      </v-card-title>\n      <div>\n        <v-row height=\"900px\">\n          <v-col\n            v-for=\"(item, index) in itemsPages\"\n            :key=\"index\"\n            class=\"d-flex child-flex\"\n            cols=\"4\"\n          >\n            <v-dialog transition=\"dialog-bottom-transition\" max-width=\"700\">\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-card class=\"mx-auto my-auto\" max-width=\"270\">\n                  <center>\n                    <v-img\n                      color=\"primary\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      :src=\"item\"\n                      height=\"270\"\n                      width=\"270\"\n                    ></v-img>\n                    <v-card-title class=\"justify-center\">\n                      {{ itemsNamePages[index] }}\n                      <v-btn class=\"ma-2\" color=\"indigo\" dark @click=\"downloadImage(urls[index])\">\n                        <v-icon dark> mdi-cloud-download </v-icon>\n                      </v-btn>\n                    </v-card-title>\n                  </center>\n                </v-card>\n              </template>\n\n              <template v-slot:default=\"dialog\">\n                <v-card>\n                  <v-img\n                    :src=\"itemsPages[index]\"\n                    color=\"primary\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                  ></v-img>\n                  <v-card-actions class=\"justify-end\">\n                    <v-btn class=\"ma-2\" color=\"indigo\" dark @click=\"downloadImage(urls[index])\">\n                      <v-icon dark> mdi-cloud-download </v-icon>\n                    </v-btn>\n                    <v-btn text @click=\"dialog.value = false\">Close</v-btn>\n                  </v-card-actions>\n                </v-card>\n              </template>\n            </v-dialog>\n          </v-col>\n        </v-row>\n      </div>\n      <div class=\"text-center\">\n        <v-pagination\n          class=\"pagination mb-2\"\n          v-model=\"page\"\n          :length=\"pages\"\n          @input=\"updatePage\"\n        ></v-pagination>\n      </div>\n\n      <p>To download the data files, you should agree with the Data Policy.</p>\n      <!--p v-if=\"downloadAllowed\"> No data availaible</p-->\n      <v-alert v-if=\"downloadAllowed\" dense outlined type=\"error\">{{\n        $t(\"opseAlert\")\n      }}</v-alert>\n      <p>\n        <v-checkbox\n          v-model=\"dataPolicy\"\n          label=\"I agree with the Data Policy\"\n          hide-details\n          :disabled=\"downloadAllowed\"\n        ></v-checkbox>\n      </p>\n\n      <v-btn\n        color=\"warning\"\n        class=\"ma-4\"\n        @click=\"downloadAll(folderFile)\"\n        :disabled=\"!url || downloadAllowed || !dataPolicy\"\n        >{{ $t(\"downloadAll\") }}</v-btn\n      >\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { applyPrimaryAndSecondaryColors } from \"../../utils\";\nexport default {\n  name: \"opse-galery-images-displayed-block\",\n\n  data() {\n    return {\n      dataPolicy: false,\n      years: [],\n      params: [],\n      currentStatus: \"PREPARING_REQUEST\",\n      url: null,\n      folderFile : \"/data/jpeg\",\n      urls: [],\n      page: 1,\n      itemsPages: [],\n      itemsNamePages: [],\n      items: [],\n      itemsName: [],\n      listCount: 0,\n      pageSize: 9,\n    };\n  },\n\n  props: {\n    language: {\n      type: String,\n      default: \"en\",\n    },\n    theme: {\n      type: Object,\n      default: () => {\n        return {\n          primaryColor: \"#F39C12\",\n          secondaryColor: \"#AAA\",\n        };\n      },\n    },\n\n    metadata: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  computed: {\n    applyTheme() {\n      return applyPrimaryAndSecondaryColors(this.theme);\n    },\n\n    isVisible() {\n      let isVisible = false;\n      if (this.url != null) {\n        isVisible = true;\n      }\n\n      this.$emit(\"getVisibility\", {\n        name: this.$options.name,\n        programmaticScrollingTitle: this.$t(\"opseDownload\"),\n        isVisible,\n      });\n      return isVisible;\n    },\n\n    downloadAllowed() {\n      if (this.items) {\n        return false;\n      }\n      return true;\n    },\n    pages() {\n      let _this = this;\n      if (_this.pageSize == null || _this.listCount == null) return 0;\n      return Math.ceil(_this.listCount / _this.pageSize);\n    },\n  },\n\n  watch: {\n    metadata() {\n      this.loadImage();\n    },\n    language(value) {\n      this.$i18n.locale = value;\n    },\n  },\n\n  created() {\n    this.$i18n.locale = this.language;\n    //this.loadImage()\n    this.file();\n    this.initPage();\n    this.updatePage(this.page);\n  },\n\n  methods: {\n    file() {\n      this.loadImage(this.folderFile);\n    },\n\n    initPage() {\n      this.listCount = this.items.length;\n      if (this.listCount < this.pageSize) {\n        this.itemsPages = this.items;\n        this.itemsNamePages = this.itemsName;\n      } else {\n        this.itemsPages = this.items.slice(0, this.pageSize);\n        this.itemsNamePages = this.itemsName.slice(0, this.pageSize);\n      }\n    },\n    updatePage(pageIndex) {\n      let _this = this;\n      let _start = (pageIndex - 1) * _this.pageSize;\n      let _end = pageIndex * _this.pageSize;\n      _this.itemsPages = _this.items.slice(_start, _end);\n      _this.itemsNamePages = _this.itemsName.slice(_start, _end);\n      _this.page = pageIndex;\n    },\n\n    download(url) {\n      this.currentStatus = \"PREPARING_REQUEST\";\n      let self = this;\n      this.downloadDialog = true;\n      this.axios({\n        method: \"get\",\n        url: url,\n      })\n        .then((response) => {\n          self.requestId = response.data;\n          /*self.checker = setInterval(() => {\n            self.checkDownload(self.metadata.id,self.requestId);\n           }, 5000);*/\n        })\n        .catch((error) => {\n          // debugger\n          //self.clearChecker();\n          self.displayError(\"An error has occured:\" + error);\n          console.log(error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n\n    downloadAll(index) {\n      //this.download(this.url+\"download?collectionId=\"+this.metadata.id)\n      window.open(\n        this.url +\n          \"data/v1_0/download?collectionId=\" +\n          this.metadata.id +\n          \"&folder=\" +\n          index\n      );\n    },\n    downloadImage(index) {\n      //this.download(this.url+\"download?collectionId=\"+this.metadata.id)\n      window.open(\n        this.url +\n          \"data/v1_0/downloadImg?collectionId=\" +\n          this.metadata.id +\n          \"&image=\" +\n          index\n      );\n    },\n\n    loadImage() {\n      let format = this.folderFile\n      let url = null;\n      if (\n        this.metadata &&\n        this.metadata.links &&\n        this.metadata.links.length > 0\n      ) {\n        for (let i = 0; i < this.metadata.links.length; i++) {\n          if (this.metadata.links[i].type == \"OPENSEARCH_LINK\") {\n            url = this.metadata.links[i].url;\n            break;\n          }\n        }\n      }\n      this.url = url;\n      if (url == null) {\n        return;\n      }\n\n      this.loading = true;\n      console.log(\n        \"url \",\n        this.url +\n          \"data/v1_0/thumbnails?collection=\" +\n          this.metadata.id +\n          \"&folder=\" +\n          format\n      );\n      this.axios({\n        method: \"get\",\n        url:\n          this.url +\n          \"data/v1_0/thumbnails?collection=\" +\n          this.metadata.id +\n          \"&folder=\" +\n          format,\n        //url: this.url + \"/request?collection=\"+this.metadata.id,\n      })\n        .then((response) => {\n          this.years = [];\n          this.items = [];\n          this.itemsName = [];\n          this.urls = []\n          console.log(\"Response\", response.data);\n\n          for (let i = 0; i < response.data.entries.length; i++) {\n            this.years.push(response.data.entries[i].date.substring(0, 4));\n          }\n          for (let i = 0; i < response.data.urls.length; i++) {\n            //let base64String = Buffer.from(String.fromCharCode.apply(null, new Uint8Array(response.data.urls[i].image)), 'utf8').toString('base64');\n            //this.items.push(\"data:image/jpg;base64,\" + base64String);\n            this.itemsName.push(response.data.urls[i].name.split(\".\")[0]);\n            this.items.push(\n              \"data:image/jpg;base64,\" + response.data.urls[i].image\n            );\n            this.urls.push(response.data.urls[i].url);\n          }\n          this.page = 1;\n          this.initPage();\n          this.updatePage(this.page);\n        })\n        .catch((error) => {\n          // this.displayError(\"An error has occured:\" + error)\n          console.log(error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  },\n};\n</script>\n0"]}]}
{"remainingRequest":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-visualisation-block/opse-visualisation-block.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-visualisation-block/opse-visualisation-block.vue","mtime":1646992089243},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/babel.config.js","mtime":1644331050195},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACAA;AACA;AACAC,kCADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,oBADA;AAEAC,4BAFA;AAGAC,wBAHA;AAIAC,mBAJA;AAKAC,0BALA;AAMAC,oBANA;AAOAC,8BAPA;AAQAC,sBARA;AASAC,eATA;AAUAC,gBAVA;AAWAC;AAXA;AAaA,GAnBA;AAqBAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAC;AACA;AACAE,iCADA;AAEAC;AAFA;AAIA;AAPA,KALA;AAeAC;AACAL,kBADA;AAEAC;AACA;AACA;AAJA;AAfA,GArBA;AA4CAK;AACAC,cADA,wBACA;AACA;AACA,KAHA;AAKAC,sBALA,gCAKA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,KAlBA;AAoBAC,iBApBA,2BAoBA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,KA5BA;AA8BAC,aA9BA,uBA8BA;AACA;AACA;;AACA;AACAA;AACA;;AACA;AACA3B,gCADA;AAEA4B,wDAFA;AAGAD;AAHA;AAKAE;AACA;AACA;AA3CA,GA5CA;AA0FAC;AACAR,YADA,sBACA;AACA;AACA;AACA,KAJA;AAMAN,YANA,oBAMAe,KANA,EAMA;AACA;AACA;AARA,GA1FA;AAqGAC,SArGA,qBAqGA;AACA,sCADA,CAEA;;AACA;AACA,GAzGA;AA2GAC;AAEAC,mBAFA,2BAEAC,SAFA,EAEA;AACA;AACA,2EACAC,GADA,EAEA;AACA;AACA,SAJA;AAKA,OANA,MAMA;AACA;AACA;;AACAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KArBA;AAuBAQ,cAvBA,sBAuBAC,IAvBA,EAuBA;AACA;AACA;AACA,KA1BA;AA4BAC,YA5BA,sBA4BA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACAC;AACA;;AACAA;;AACA;AACAA;AACA;;AACA;AACAA;AACA;;AACA;AACAC,qBADA;AAEAD;AAFA,SAKAE,IALA,CAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACAC;AACAA;AACAxC;AACA;;AAEA;AACAyC;AACAC;AACA;;AACA;AACA;;AACAF;;AACAA;;AACAG;AACA;;AACAC;AACAA;AAEAC;AAEA;;AACAnB;AAEA;AACAoB;AACAC,+BADA;AAEAC,sBACA;AACAlC,2BADA;AAEAmC,sBAFA;AAGAC;AAHA,aADA,EAMA;AACApC,0BADA;AAEAmC,sBAFA;AAGAC;AAHA,aANA,EAWA;AACApC,yBADA;AAEAoC;AAFA,aAXA;AAFA,WADA;AAoBAC;AACAD;AADA,WApBA;AAuBAE;AACAtC,4BADA;AAEAqC;AACAD;AADA;AAFA,WAvBA;AA6BAG;AACAF;AACAD;AADA;AADA,WA7BA;AAkCAL;AAlCA;AAoCA;AACA,OAjFA,EAkFAS,KAlFA,CAkFA;AACA;AAEA5B;AACA,OAtFA,EAuFA6B,OAvFA,CAuFA;AACA;AACA,OAzFA;AA0FA,KAtIA;AAwIAC,cAxIA,wBAwIA;AACA;;AACA,UACA,iBACA,mBADA,IAEA,8BAHA,EAIA;AACA;AACA;AACAnB;AACA;AACA;AACA;AACA;;AACAX;AACA;AACA,KAxJA;AAyJA+B,aAzJA,uBAyJA;AAAA;;AACA;;AACA,UACA,iBACA,mBADA,IAEA,8BAHA,EAIA;AACA;AACA;AACApB;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AAEA;AACAX,kBACA,MADA,EAEA,WACA,gCADA,GAEA,gBAFA,GAGA,mBALA;AAOA;AACAY,qBADA;AAEAD,aACA,WACA,gCADA,GAEA,gBAFA,GAGA,mBANA,CAOA;;AAPA,SASAE,IATA,CASA;AACA;AACA;AACA;AACA;AACAb;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,cACA,2DADA,EAEA;AACA;AACA;AACA,SAnBA,CAqBA;;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OArCA,EAwCA4B,KAxCA,CAwCA;AACA;AACA5B;AACA,OA3CA,EA4CA6B,OA5CA,CA4CA;AACA;AACA,OA9CA;AA+CA,KAnOA;AAoOAG,oBApOA,4BAoOAC,KApOA,EAoOA;AACA;;AACA;AACA,iDACA/B;AACA,OALA,CAMA;AACA;AACA;;;AACA;AACA;AA9OA;AA3GA","names":["Exporting","name","components","VueHighcharts","data","loading","Highcharts","loadingData","locations","selectedLocation","parameters","selectedParameters","selectedYear","years","pivots","chartOptions","props","language","type","default","theme","primaryColor","secondaryColor","metadata","computed","applyTheme","hasNamedParameters","hasNamedYears","isVisible","programmaticScrollingTitle","console","watch","value","mounted","methods","selectParameter","parameter","ele","selectYear","year","loadData","url","method","then","aux","keys","values","datas","serievalues","series","rangeSelector","inputEnabled","buttons","count","text","title","xAxis","yAxis","catch","finally","computeUrl","loadYears","isselectedparams","param"],"sourceRoot":"src/lib/modules/opse-visualisation-block","sources":["opse-visualisation-block.vue"],"sourcesContent":["<i18n  >\n{\n  \"en\": {\n    \"bvetAccessData\": \"Data access\",\n    \"explicationText\": \"Select the years you want to download.\",\n    \"explicationParameters\": \"Select the parameters you want to donwload (all parameters are selected by default).\",\n    \"selectionError\": \"Select at least one parameter\",\n    \"year\": \"Year\",\n    \"parameter\": \"Parameter\",\n    \"downloadSelected\": \"Download selected years\",\n    \"downloadAll\": \"Download All years\",\n    \"blocTitle\": \"Time series\",\n    \"downloadingData\": \"Download progression\",\n    \"loadingYears\": \"Loading year details\",\n    \"PREPARING_REQUEST\": \"Sending request\",\n    \"COLLECTING_DATA\": \"Collecting data\",\n    \"PROCESSING_DATA\": \"Processing data\",\n    \"GENERATING_ARCHIVE_DATA\": \"Generating data archive\",\n\n    \"dataAreReady\": \"Your data are now ready to be retrieved\",\n    \"cancel\": \"Cancel\"\n  },\n  \"fr\": {\n     \"downloadSelected\": \"Télécharger la sélection\",\n    \"downloadAll\": \"Télécharger\",\n    \"bvetAccessData\": \"Accès aux données\",\n    \"explicationText\": \"Selectionnez les années que vous voulez télécharger (tous les paramètres sont sélectionés par défaut).\",\n    \"explicationParameters\": \"Selectionnez les paramètres que vous voulez télécharger.\",\n    \"selectionError\": \"Selectionez au moins un paramètre\",\n    \"year\": \"Année\",\n    \"parameter\": \"Paramètre\",\n    \"blocTitle\": \"Séries temporelles\",\n    \"downloadingData\": \"Progression du téléchargement\",\n    \"loadingYears\": \"Chargement des détails des années\",\n    \"PREPARING_REQUEST\": \"Envoi de la requête\",\n    \"COLLECTING_DATA\": \"Collecte des données\",\n    \"PROCESSING_DATA\": \"Traitement des données\",\n    \"GENERATING_ARCHIVE_DATA\": \"Génération de l'archive\",\n    \"dataAreReady\": \"Les données sont prêtes à être récupérées\",\n    \"cancel\": \"Annuler\"\n  }\n}\n</i18n>\n<template>\n  <span>\n    <v-card v-if=\"isVisible\" :style=\"applyTheme\" :flat=\"true\">\n      <v-card-title>\n        <v-icon large left style=\"color: #f39c12\"\n          >mdi-chart-timeline-variant</v-icon\n        >\n        <span>{{ $t(\"blocTitle\") }}</span>\n      </v-card-title>\n      <v-card-text v-if=\"years.length > 0\">\n        <!-- <div v-if=\"locations.length==0\">\n    No location\n  </div> -->\n        <div>\n          <section v-if=\"hasNamedParameters\">\n            <div class=\"text-h6\">Parameters</div>\n            <v-btn\n              small\n              class=\"mr-2 mt-2\"\n              :color=\"isselectedparams(parameter)? 'primary' : 'default'\"\n              v-for=\"parameter in parameters\"\n              :key=\"parameter\"\n              @click=\"selectParameter(parameter)\"\n              >{{ parameter }}</v-btn\n            >\n          </section>\n          <section v-if=\"hasNamedYears\">\n            <div class=\"text-h6\">Years</div>\n            <v-btn\n              small\n              class=\"mr-2 mt-2\"\n              :color=\"year == selectedYear ? 'primary' : 'default'\"\n              v-for=\"year in years\"\n              :key=\"year\"\n              @click=\"selectYear(year)\"\n              >{{ year }}</v-btn\n            >\n          </section>\n\n          <section class=\"py-2\" v-if=\"loadingData\">\n            <v-progress-linear :indeterminate=\"true\"></v-progress-linear>\n            <div>\n              Loading data:\n\n              <span v-if=\"selectedParameters.length > 0\"\n                >Parameter {{ selectedParameters }}</span\n              >\n              <span\n                v-if=\"\n                  selectedParameters.length > 0 && ('' + selectedYear).length > 0\n                \"\n              >\n                -\n              </span>\n              <span v-if=\"('' + selectedYear).length > 0\"\n                >Year {{ selectedYear }}</span\n              >\n            </div>\n          </section>\n          <section class=\"py-2\" v-else>\n            <vue-highcharts\n              :highcharts=\"Highcharts\"\n              :options=\"chartOptions\"\n            ></vue-highcharts>\n          </section>\n        </div>\n      </v-card-text>\n      <v-card-text v-else>\n        Visualisation has not been implemented yet for this dataset.\n      </v-card-text>\n    </v-card>\n  </span>\n</template>\n\n<script>\nimport { applyPrimaryAndSecondaryColors } from \"../../utils\";\nimport VueHighcharts from \"vue2-highcharts\";\nimport Highcharts from \"highcharts/highstock\";\nimport Exporting from \"highcharts/modules/exporting\";\nExporting(Highcharts);\nexport default {\n  name: \"opse-visualisation-block\",\n  components: {\n    VueHighcharts,\n  },\n  data() {\n    return {\n      loading: false,\n      Highcharts: Highcharts,\n      loadingData: false,\n      locations: [],\n      selectedLocation: \"\",\n      parameters: [],\n      selectedParameters: null,\n      selectedYear: \"\",\n      years: [],\n      pivots: [],\n      chartOptions: null,\n    };\n  },\n\n  props: {\n    language: {\n      type: String,\n      default: \"en\",\n    },\n    theme: {\n      type: Object,\n      default: () => {\n        return {\n          primaryColor: \"#F39C12\",\n          secondaryColor: \"#AAA\",\n        };\n      },\n    },\n\n    metadata: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  computed: {\n    applyTheme() {\n      return applyPrimaryAndSecondaryColors(this.theme);\n    },\n\n    hasNamedParameters() {\n      if (this.parameters == null) {\n        return false;\n      }\n      if (this.parameters.length == 0) {\n        return false;\n      }\n      for (let i = 0; i < this.parameters.length; i++) {\n        if (this.parameters[i].length > 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    hasNamedYears() {\n      if (this.years == null) {\n        return false;\n      }\n      if (this.years.length == 0) {\n        return false;\n      }\n      return true;\n    },\n\n    isVisible() {\n      let isVisible = true;\n      let url = this.computeUrl();\n      if (!url) {\n        isVisible == false;\n      }\n      this.$emit(\"getVisibility\", {\n        name: this.$options.name,\n        programmaticScrollingTitle: this.$t(\"blocTitle\"),\n        isVisible,\n      });\n      console.log('isvisible value',isVisible);\n      return isVisible;\n    },\n  },\n\n  watch: {\n    metadata() {\n      //this.loadLocations();\n      this.loadYears()\n    },\n\n    language(value) {\n      this.$i18n.locale = value;\n    },\n  },\n\n  mounted() {\n    this.$i18n.locale = this.language;\n    //this.loadLocations();\n    this.loadYears()\n  },\n\n  methods: {\n\n    selectParameter(parameter) {\n      if (this.selectedParameters.includes(parameter)) {\n        this.selectedParameters = this.selectedParameters.filter(function (\n          ele\n        ) {\n          return ele != parameter;\n        });\n      } else {\n        this.selectedParameters.push(parameter);\n      }\n      console.log(this.selectedParameters)\n      this.loadData();\n      /*\n      this.years = parameter.years;\n      if (this.years && this.years.length > 0) {\n        this.selectYear(this.years[0]);\n      } else {\n        this.loadData();\n      }*/\n    },\n\n    selectYear(year) {\n      this.selectedYear = year;\n      this.loadData();\n    },\n\n    loadData() {\n      this.loadingData = true;\n      let url = this.computeUrl();\n      if (!url) {\n        return;\n      }\n      if (!url.endsWith(\"/\")) {\n        url = url + \"/\";\n      }\n      url = url + \"data/v1_0/json?uuid=\" + this.metadata.id;\n      if ((\"\" + this.selectedYear).length > 0) {\n        url = url + \"&year=\" + this.selectedYear;\n      }\n      if (this.selectedParameters && this.selectedParameters.length > 0) {\n        url = url + \"&param=\" + this.selectedParameters.join(\"___\");\n      }\n      this.axios({\n        method: \"get\",\n        url: url,\n      })\n      \n        .then((response) => {\n          //   let timeserie = {\n          // x: [],\n          // y: [],\n          // type:\"scatter\"\n          //   }\n\n          let data = [];\n          let keys = [];\n          let values = [];\n\n          let series = [];\n          let serievalues = {};\n\n          for (let i = 0; i < response.data.length; i++) {\n            let aux = [];\n            aux.push(Date.parse(response.data[i].ts));\n            aux.push(parseFloat(response.data[i].f.value));\n            data.push(aux);\n          }\n\n          for (let i = 0; i < response.data.entries.length; i++) {\n            keys = response.data.entries[i].key\n            values = response.data.entries[i].data\n            let datas = [];\n            for(let j =0; j<keys.length; j++){\n              let aux = [];\n              aux.push(Date.parse(keys[j]));\n              aux.push(parseFloat(values[j]));\n              datas.push(aux);\n            }\n            serievalues.name = response.data.entries[i].name;\n            serievalues.data = datas;\n            \n            series.push({...serievalues});\n            \n          }\n          console.log(series)\n\n          let chartOptions = {\n            rangeSelector: {\n              inputEnabled: false,\n              buttons: [\n                {\n                  type: \"month\",\n                  count: 3,\n                  text: \"3m\",\n                },\n                {\n                  type: \"year\",\n                  count: 1,\n                  text: \"1y\",\n                },\n                {\n                  type: \"all\",\n                  text: \"All\",\n                },\n              ],\n            },\n            title: {\n              text: \"\",\n            },\n            xAxis: {\n              type: \"datetime\",\n              title: {\n                text: null,\n              },\n            },\n            yAxis: {\n              title: {\n                text: null,\n              },\n            },\n            series: series,\n          };\n          this.chartOptions = chartOptions;\n        })\n        .catch((error) => {\n          // this.displayError(\"An error has occured:\" + error)\n\n          console.log(error);\n        })\n        .finally(() => {\n          this.loadingData = false;\n        });\n    },\n\n    computeUrl() {\n      let url = null;\n      if (\n        this.metadata &&\n        this.metadata.links &&\n        this.metadata.links.length > 0\n      ) {\n        for (let i = 0; i < this.metadata.links.length; i++) {\n          if (this.metadata.links[i].type == \"OPENSEARCH_LINK\") {\n            url = this.metadata.links[i].url;\n            break;\n          }\n        }\n      }\n      console.log(url)\n      return url;\n    },\n    loadYears() {\n      let url = null;\n      if (\n        this.metadata &&\n        this.metadata.links &&\n        this.metadata.links.length > 0\n      ) {\n        for (let i = 0; i < this.metadata.links.length; i++) {\n          if (this.metadata.links[i].type == \"OPENSEARCH_LINK\") {\n            url = this.metadata.links[i].url;\n            break;\n          }\n        }\n      }\n      this.url = url;\n      if (url == null) {\n        return;\n      }\n\n      this.loading = true;\n      console.log(\n        \"url \",\n        this.url +\n          \"data/v1_0/request1?collection=\" +\n          this.metadata.id +\n          \"&folder=/data/csv\"\n      );\n      this.axios({\n        method: \"get\",\n        url:\n          this.url +\n          \"data/v1_0/request1?collection=\" +\n          this.metadata.id +\n          \"&folder=/data/csv\"\n        //url: this.url + \"/request?collection=\"+this.metadata.id,\n      })\n        .then((response) => {\n          this.years = [];\n          this.parameters = [];\n          this.selectedParameters = []\n          this.pivots = [];\n          console.log(\"Response\", response.data);\n\n          for (let i = 0; i < response.data.entries.length; i++) {\n            this.years.push(response.data.entries[i].date.substring(0, 4));\n          }\n          for (let i = 0; i < response.data.pivots.length; i++) {\n            this.pivots.push(response.data.pivots[i].name);\n          }\n          for (let i = 0; i < response.data.parameters.length; i++) {\n            if (\n              !this.pivots.includes(response.data.parameters[i].name)\n            ) {\n              this.parameters.push(response.data.parameters[i].name);\n            }\n          }\n\n          //console.log(this.years);\n          if (this.years.length > 0) {\n            this.selectYear(this.years[0]);\n          }\n          if (this.parameters.length > 0) {\n            this.selectParameter(this.parameters[0]);\n          }\n        }\n        \n        )\n        .catch((error) => {\n          // this.displayError(\"An error has occured:\" + error)\n          console.log(error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  isselectedparams(param){\n    let value = false;\n    for (let i = 0; i < this.selectedParameters.length; i++){\n      if(param == this.selectedParameters[i])\n      value =  true;\n    }\n    //console.log(this.selectedParameters);\n    //console.log(\"voici la value\",value);\n    //console.log(\"voici la parametre\",param);\n    return value;\n  }\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}
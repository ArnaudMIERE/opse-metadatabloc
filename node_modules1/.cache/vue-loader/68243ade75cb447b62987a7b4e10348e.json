{"remainingRequest":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-data-netcdf-block/opse-data-netcdf-block.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-data-netcdf-block/opse-data-netcdf-block.vue","mtime":1644331050199},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGFwcGx5UHJpbWFyeUFuZFNlY29uZGFyeUNvbG9ycyB9IGZyb20gIi4uLy4uL3V0aWxzIjsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIm9wc2UtZGF0YS1uZXRjZGYtYmxvY2siLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm57CiAgICAgICAgZmlsZXM6IFtdLAogICAgICAgIGRhdGFzZXRGaWxlOiBudWxsLAogICAgICAgIGRhdGFzZXRGaWxlSW5wdXQ6ICIiLAogICAgICAgIHNlYXJjaDogJycsCiAgICAgICAgZGF0YUZpbGU6W10sCiAgICAgICAgZmlsZU5hbWU6JycsCiAgICAgICAgZGVsZXRpb25EaWFsb2c6ZmFsc2UsCiAgICAgICAgZGVsZXRpb25EaWFsb2dBbGw6IGZhbHNlLAogICAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7IHRleHQ6ICJGaWxlcyIsIHZhbHVlOiAibmFtZSJ9LAogICAgICAgIHsgdGV4dDogIkFjdGlvbnMiLCB2YWx1ZTogImFjdGlvbiIsIHNvcnRhYmxlOiBmYWxzZSB9CiAgICAgICAgXSwKICAgICAgICBub3RpZmllcjogZmFsc2UsCiAgICAgICAgbm90aWZpZXJNZXNzYWdlOiAnJywKICAgICAgICBub3RpZmllckNvbG9yOiAnc3VjY2VzcycsCiAgICAgICAgdGltZW91dDoyMDAwCgogICAgICAgIH0KICAgIH0sCgogICAgcHJvcHM6IHsKICAgIGxhbmd1YWdlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImVuIgogICAgfSwKICAgIHRoZW1lOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7ICAgICAgICAKICAgICAgICBwcmltYXJ5Q29sb3I6ICIjRjM5QzEyIiwKICAgICAgICBzZWNvbmRhcnlDb2xvcjogIiNBQUEifTsKICAgICAgfQogICAgfSwKICAgIHNlcnZpY2U6IG51bGwsCiAgICBkb3dubG9hZFVybDogbnVsbCwKICAgIG1ldGFkYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIAogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAgIAogICAgYXBwbHlUaGVtZSgpIHsKICAgICAgcmV0dXJuIGFwcGx5UHJpbWFyeUFuZFNlY29uZGFyeUNvbG9ycyh0aGlzLnRoZW1lKTsKICAgIH0sCgogICAgaXNWaXNpYmxlKCkgewogICAgICAgIGxldCBpc1Zpc2libGUgPSBmYWxzZQogICAgICAgIGlmKHRoaXMubGlua3MgIT0gbnVsbCAmJiB0aGlzLmxpbmtzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgaXNWaXNpYmxlID0gdHJ1ZQogICAgICAgIH0KICAgICAgICB0aGlzLiRlbWl0KCJnZXRWaXNpYmlsaXR5IiwgewogICAgICAgIG5hbWU6IHRoaXMuJG9wdGlvbnMubmFtZSwKICAgICAgICBwcm9ncmFtbWF0aWNTY3JvbGxpbmdUaXRsZTogdGhpcy4kdCgib3BzZURhdGFMaXN0IiksCiAgICAgICAgaXNWaXNpYmxlCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGlzVmlzaWJsZTsKICAgIH0sCgogICAgbGlua3MoKSB7CiAgICAgICAgbGV0IGxpbmtzID0gW10KICAgICAgICBpZih0aGlzLm1ldGFkYXRhICYmIHRoaXMubWV0YWRhdGEubGlua3MgJiYgdGhpcy5tZXRhZGF0YS5saW5rcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGZvcihsZXQgaT0wIDsgaSA8IHRoaXMubWV0YWRhdGEubGlua3MubGVuZ3RoIDsgaSsrKSB7CiAgICAgICAgICAgICAgICBpZih0aGlzLm1ldGFkYXRhLmxpbmtzW2ldLnR5cGUgPT0gJ09QRU5TRUFSQ0hfTElOSycpIHsKICAgICAgICAgICAgICAgICAgICBsaW5rcy5wdXNoKHRoaXMubWV0YWRhdGEubGlua3NbaV0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGxpbmtzCiAgICB9LAoKICAgIGRpc2FibGVDb25maXJtVXBsb2FkKCkgewogICAgICBpZiAodGhpcy5maWxlcyl7CiAgICAgICAgY29uc29sZS5sb2coInRoaXMuZmlsZXMgIix0aGlzLmZpbGVzKQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICAgIHJldHVybiBmYWxzZTsKICAgICAgCiAgICB9LAogIH0sCgogIHdhdGNoOiB7CiAgICBsYW5ndWFnZSh2YWx1ZSkgewogICAgICB0aGlzLiRpMThuLmxvY2FsZSA9IHZhbHVlOwogICAgfSwKICAgIG1ldGFkYXRhKCl7CiAgICAgICAgdGhpcy5sb2FkRGF0YSgpOwogICAgfQogIH0sCgogIGNyZWF0ZWQoKSB7CiAgIHRoaXMuJGkxOG4ubG9jYWxlID0gdGhpcy5sYW5ndWFnZTsKICAgdGhpcy5sb2FkRGF0YSgpOwogIH0sCgogIG1ldGhvZHM6IHsKCiAgICBjb25maXJtRGVsZXRpb24oZmlsZSkgewogICAgdGhpcy5maWxlTmFtZSA9IGZpbGUsCiAgICB0aGlzLmRlbGV0aW9uRGlhbG9nID0gdHJ1ZQogIH0sCgogICAgICBsb2FkRGF0YSgpIHsKICAgICAgbGV0IHVybCA9IG51bGwKICAgICAgICBpZih0aGlzLm1ldGFkYXRhICYmIHRoaXMubWV0YWRhdGEubGlua3MgJiYgdGhpcy5tZXRhZGF0YS5saW5rcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGZvcihsZXQgaT0wIDsgaSA8IHRoaXMubWV0YWRhdGEubGlua3MubGVuZ3RoIDsgaSsrKSB7CiAgICAgICAgICAgICAgICBpZih0aGlzLm1ldGFkYXRhLmxpbmtzW2ldLnR5cGUgPT0gJ09QRU5TRUFSQ0hfTElOSycpIHsKICAgICAgICAgICAgICAgICAgICB1cmwgPSB0aGlzLm1ldGFkYXRhLmxpbmtzW2ldLnVybAogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy51cmwgPSB1cmw7CiAgICAgICAgaWYgKHVybCA9PSBudWxsKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIHRoaXMuYXhpb3MoewogICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgdXJsOiB0aGlzLnVybCArICJkYXRhRmlsZXM/Y29sbGVjdGlvbj0iK3RoaXMubWV0YWRhdGEuaWQsCiAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgaWYgKHJlc3BvbnNlKXsKICAgICAgICB0aGlzLmRhdGFGaWxlID0gcmVzcG9uc2UuZGF0YQogICAgICAgIAogICAgICAgIGNvbnNvbGUubG9nKCJMaXN0ZSBkZSBmaWNoaWVycyIscmVzcG9uc2UuZGF0YSkKICAgICAgICAKICAgICAgICAgIH0KICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgdGhpcy5kaXNwbGF5RXJyb3IoIkFuIGVycm9yIGhhcyBvY2N1cmVkOiIgKyBlcnJvcikKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAKICAgICAgICB9KQogICAgICAuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KTsKCiAgICB9LAoKICAgIGNvbmZpcm1lRGVsZXRlKCl7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMudXJsICsgImRlbGV0ZT9jb2xsZWN0aW9uPSIrdGhpcy5tZXRhZGF0YS5pZCsiJmZpbGVOYW1lPSIrdGhpcy5maWxlTmFtZSkKICAgICAgdGhpcy5heGlvcyh7CiAgICAgICAgbWV0aG9kOiAiZGVsZXRlIiwKICAgICAgICB1cmw6IHRoaXMudXJsICsgImRlbGV0ZT9jb2xsZWN0aW9uPSIrdGhpcy5tZXRhZGF0YS5pZCsiJmZpbGVOYW1lPSIrdGhpcy5maWxlTmFtZSwKICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgaWYgKHJlc3BvbnNlKQogICAgICAgICAgdGhpcy5kaXNwbGF5U3VjY2VzcygiRmlsZSBkZWxldGVkIikKICAgICAgICAgIHRoaXMubG9hZERhdGEoKTsKICAgICAgICAgIHRoaXMuZGVsZXRpb25EaWFsb2c9ZmFsc2UKICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgdGhpcy5kaXNwbGF5RXJyb3IoIkFuIGVycm9yIGhhcyBvY2N1cmVkOiIgKyBlcnJvcikKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAKICAgICAgICB9KQogICAgICAuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KTsKCiAgICB9LAoKICAgIGRlbGV0ZUFsbCgpewogICAgICBjb25zb2xlLmxvZyh0aGlzLnVybCArICJkZWxldGUiKQogICAgICB0aGlzLmF4aW9zKHsKICAgICAgICBtZXRob2Q6ICJkZWxldGUiLAogICAgICAgIHVybDogdGhpcy51cmwgKyAiZGVsZXRlQWxsP2NvbGxlY3Rpb249Iit0aGlzLm1ldGFkYXRhLmlkLAogICAgICB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBpZiAocmVzcG9uc2UpCiAgICAgICAgICB0aGlzLmRpc3BsYXlTdWNjZXNzKCJGaWxlcyBkZWxldGVkIikKICAgICAgICAgIHRoaXMubG9hZERhdGEoKTsKICAgICAgICAgIHRoaXMuZGVsZXRpb25EaWFsb2dBbGw9ZmFsc2UKICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgdGhpcy5kaXNwbGF5RXJyb3IoIkFuIGVycm9yIGhhcyBvY2N1cmVkOiIgKyBlcnJvcikKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAKICAgICAgICB9KQogICAgICAuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KTsKCiAgICB9LAoKICAgICAgCiAgICB1cGxvYWQoKXsKICAgICAgaWYgKHRoaXMuZmlsZXMpewogICAgICAgIHRoaXMuZGF0YXNldEZpbGUgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICBmb3IgKHZhciBpPTA7IGk8dGhpcy5maWxlcy5sZW5ndGg7IGkrKyl7CiAgICAgICAgICB0aGlzLmRhdGFzZXRGaWxlLmFwcGVuZCgiZmlsZSIsIHRoaXMuZmlsZXNbaV0pCiAgICAgICAgfQogICAgICAKICAgIAogICAgICB0aGlzLmF4aW9zKHsKICAgICAgICBtZXRob2Q6ICJwb3N0IiwKICAgICAgICB1cmw6IHRoaXMudXJsICsgInVwbG9hZD9jb2xsZWN0aW9uPSIrdGhpcy5tZXRhZGF0YS5pZCwKICAgICAgICBkYXRhOnRoaXMuZGF0YXNldEZpbGUsCiAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScgfQogICAgICB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBpZiAocmVzcG9uc2UpCiAgICAgICAgICB0aGlzLmRpc3BsYXlTdWNjZXNzKCJGaWxlIHVwbG9hZGVkIikKICAgICAgICAgIHRoaXMubG9hZERhdGEoKTsKICAgICAgICAgIHRoaXMuZGF0YXNldEZpbGVJbnB1dCA9ICIiOwogICAgICAgICAgCiAgICAgIH0pIAogICAgICAKICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgIHRoaXMuZGlzcGxheUVycm9yKCJBbiBlcnJvciBoYXMgb2NjdXJlZDoiICsgZXJyb3IpCiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgCiAgICAgICAgfSkKICAgICAgLmZpbmFsbHkoKCkgPT4gewogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgfSk7CiAgICB9CiAgICB9LAogICAgCgogICAgZGlzcGxheUVycm9yKG1lc3NhZ2UpewogICAgICAgIHRoaXMubm90aWZpZXJNZXNzYWdlID0gbWVzc2FnZQogICAgICAgIHRoaXMubm90aWZpZXJDb2xvciA9ICdlcnJvcicKICAgICAgICAgIHRoaXMudGltZW91dD0yMDAwCiAgICAgICAgICB0aGlzLm5vdGlmaWVyID0gdHJ1ZQogICAgfSwKCiAgICBkaXNwbGF5U3VjY2VzcyhtZXNzYWdlKXsKICAgICAgICB0aGlzLm5vdGlmaWVyTWVzc2FnZSA9IG1lc3NhZ2UKICAgICAgICB0aGlzLm5vdGlmaWVyQ29sb3IgPSAnc3VjY2VzcycKICAgICAgICB0aGlzLnRpbWVvdXQ9MjAwMAogICAgICAgIHRoaXMubm90aWZpZXIgPSB0cnVlCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["opse-data-netcdf-block.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"opse-data-netcdf-block.vue","sourceRoot":"src/lib/modules/opse-data-netcdf-block","sourcesContent":["<i18n  >\n{\n  \"en\": {\n       \"opseDataList\":\"Files List\",\n       \"opseConvert\": \"Convert NetCDF\",\n       \"opseDelete\": \"Delete\",\n       \"opseConfirmation\": \"Confirmation\",\n       \"opseConfirmationDelete\": \"Do you confirm this deletion ?\",\n       \"opseConfirmationDeleteAll\": \"Do you confirm deletion of all files ?\",\n       \"opseConfirm\": \"Confirm\",\n       \"opseCancel\": \"Cancel\",\n       \"opseSelectFile\": \"Select files\",\n       \"opseListFile\": \"List of files\",\n       \"opseUpload\": \"Upload\"\n  },\n  \"fr\": {\n      \"opseDataList\": \"Liste de fichiers\",\n      \"opseConvert\": \"Convertir NetCDF\",\n      \"opseDelete\": \"Supprimer\",\n      \"opseConfirmation\": \"Confirmation\",\n      \"opseConfirmationDelete\": \"Confirmez-vous cette suppression ?\",\n      \"opseConfirmationDeleteAll\":\"Confirmez-vous la suppression de tous les fichiers ?\",\n      \"opseConfirm\": \"Confirmer\",\n      \"opseCancel\": \"Annuler\",\n      \"opseSelectFile\": \"Sélectionnez des fichiers\",\n      \"opseListFile\": \"Liste de fichiers\",\n      \"opseUpload\": \"Upload\"\n  }\n}\n</i18n>\n\n<template>\n\n<v-app class=\"transparent\">\n\n  <v-dialog v-model=\"deletionDialog\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"d-flex justify-space-between blue-grey lighten-5\"> <span class=\"headline\">{{ $t('opseConfirmation') }}</span>\n        <v-btn fab text @click=\"deletionDialog = false\" > <v-icon>mdi-close</v-icon> </v-btn></v-card-title>\n        <v-card-text>{{ $t('opseConfirmationDelete') }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn small outlined color=\"success\"   @click=\"confirmeDelete()\">{{$t('opseConfirm')}}</v-btn>\n          <v-btn small outlined color=\"error\"   @click=\"deletionDialog = false\">{{$t('opseCancel')}}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog v-model=\"deletionDialogAll\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"d-flex justify-space-between blue-grey lighten-5\"> <span class=\"headline\">{{ $t('opseConfirmation') }}</span>\n        <v-btn fab text @click=\"deletionDialogAll = false\" > <v-icon>mdi-close</v-icon> </v-btn></v-card-title>\n        <v-card-text>{{ $t('opseConfirmationDeleteAll') }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn small outlined color=\"success\"   @click=\"deleteAll()\">{{$t('opseConfirm')}}</v-btn>\n          <v-btn small outlined color=\"error\"   @click=\"deletionDialogAll = false\">{{$t('opseCancel')}}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-card max-width=\"600\">\n      <v-card-title><v-icon large left style=\"color:#F39C12\">mdi-hand-pointing-right</v-icon>{{$t('opseSelectFile')}}</v-card-title>\n      <v-file-input  show-size outlined counter multiple prepend-icon=\"mdi-upload\"  label=\"File input\" :value=\"datasetFileInput\" v-model=\"files\">\n        <template v-slot:selection=\"{ text }\">\n      <v-chip\n        small\n        label\n        color=\"warning\"\n      >\n        {{ text }}\n      </v-chip>\n    </template>\n      </v-file-input>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n          <v-btn color=\"success\"  @click=\"upload()\"><v-icon dark left title=\"Upload\">mdi-folder-upload</v-icon>{{$t('opseUpload')}}</v-btn>\n      </v-card-actions>\n    </v-card>\n    <br/>\n<v-snackbar v-model=\"notifier\" top :color=\"notifierColor\" :timeout=\"timeout\"  >\n      {{ notifierMessage }}\n      <v-btn text @click=\"notifier = false\" > <v-icon>mdi-close</v-icon> </v-btn>\n</v-snackbar>\n\n    <v-card v-if=\"isVisible\" :style=\"applyTheme\" max-width=\"600\">\n    <v-card-title>\n        <v-icon large left style=\"color:#F39C12\">mdi-file</v-icon>{{$t('opseListFile')}}\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n    </v-card-title>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"dataFile\"\n      :search=\"search\"\n      class=\"elevation-1\"\n    >\n    \n\n    <template v-slot:item=\"{item}\">\n        <tr>\n            <td class=\"dense text-xs-left\">\n                {{item.name}}\n                <span></span>\n            </td>\n            <td>\n                <v-btn small outlined color=\"success\">{{ $t('opseConvert') }}</v-btn>\n\n                <v-btn icon @click=\"confirmDeletion(item.name)\"><v-icon color=\"error\" title=\"Delete\" >  mdi-trash-can </v-icon></v-btn>\n            </td>\n        </tr>\n    </template>\n    \n    \n    \n    </v-data-table>\n    <v-card-actions>\n          <v-spacer></v-spacer>\n     <v-btn color=\"error\" dark @click=\"deletionDialogAll=true\"> <v-icon dark left title=\"Delete all\" @click=\"deletionDialogAll=true\">  mdi-trash-can </v-icon>{{$t('opseDelete')}}</v-btn>\n    </v-card-actions>\n  </v-card>\n  </v-app>\n  \n</template>\n\n\n<script>\nimport { applyPrimaryAndSecondaryColors } from \"../../utils\";\nexport default {\n    name: \"opse-data-netcdf-block\",\n    data() {\n        return{\n        files: [],\n        datasetFile: null,\n        datasetFileInput: \"\",\n        search: '',\n        dataFile:[],\n        fileName:'',\n        deletionDialog:false,\n        deletionDialogAll: false,\n        headers: [\n        { text: \"Files\", value: \"name\"},\n        { text: \"Actions\", value: \"action\", sortable: false }\n        ],\n        notifier: false,\n        notifierMessage: '',\n        notifierColor: 'success',\n        timeout:2000\n\n        }\n    },\n\n    props: {\n    language: {\n      type: String,\n      default: \"en\"\n    },\n    theme: {\n      type: Object,\n      default: () => {\n        return {        \n        primaryColor: \"#F39C12\",\n        secondaryColor: \"#AAA\"};\n      }\n    },\n    service: null,\n    downloadUrl: null,\n    metadata: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    \n  },\n\n  computed: {\n      \n    applyTheme() {\n      return applyPrimaryAndSecondaryColors(this.theme);\n    },\n\n    isVisible() {\n        let isVisible = false\n        if(this.links != null && this.links.length > 0) {\n            isVisible = true\n        }\n        this.$emit(\"getVisibility\", {\n        name: this.$options.name,\n        programmaticScrollingTitle: this.$t(\"opseDataList\"),\n        isVisible\n        });\n        return isVisible;\n    },\n\n    links() {\n        let links = []\n        if(this.metadata && this.metadata.links && this.metadata.links.length > 0) {\n            for(let i=0 ; i < this.metadata.links.length ; i++) {\n                if(this.metadata.links[i].type == 'OPENSEARCH_LINK') {\n                    links.push(this.metadata.links[i])\n                }\n            }\n        }\n        return links\n    },\n\n    disableConfirmUpload() {\n      if (this.files){\n        console.log(\"this.files \",this.files)\n        return true;\n      }\n      return false;\n      \n    },\n  },\n\n  watch: {\n    language(value) {\n      this.$i18n.locale = value;\n    },\n    metadata(){\n        this.loadData();\n    }\n  },\n\n  created() {\n   this.$i18n.locale = this.language;\n   this.loadData();\n  },\n\n  methods: {\n\n    confirmDeletion(file) {\n    this.fileName = file,\n    this.deletionDialog = true\n  },\n\n      loadData() {\n      let url = null\n        if(this.metadata && this.metadata.links && this.metadata.links.length > 0) {\n            for(let i=0 ; i < this.metadata.links.length ; i++) {\n                if(this.metadata.links[i].type == 'OPENSEARCH_LINK') {\n                    url = this.metadata.links[i].url\n                    break\n                }\n            }\n        }\n        this.url = url;\n        if (url == null) {\n          return\n        }\n\n      this.loading = true\n      this.axios({\n        method: \"get\",\n        url: this.url + \"dataFiles?collection=\"+this.metadata.id,\n      }).then(response => {\n          if (response){\n        this.dataFile = response.data\n        \n        console.log(\"Liste de fichiers\",response.data)\n        \n          }\n      }).catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n\n    },\n\n    confirmeDelete(){\n      console.log(this.url + \"delete?collection=\"+this.metadata.id+\"&fileName=\"+this.fileName)\n      this.axios({\n        method: \"delete\",\n        url: this.url + \"delete?collection=\"+this.metadata.id+\"&fileName=\"+this.fileName,\n      }).then(response => {\n        if (response)\n          this.displaySuccess(\"File deleted\")\n          this.loadData();\n          this.deletionDialog=false\n      }).catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n\n    },\n\n    deleteAll(){\n      console.log(this.url + \"delete\")\n      this.axios({\n        method: \"delete\",\n        url: this.url + \"deleteAll?collection=\"+this.metadata.id,\n      }).then(response => {\n        if (response)\n          this.displaySuccess(\"Files deleted\")\n          this.loadData();\n          this.deletionDialogAll=false\n      }).catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n\n    },\n\n      \n    upload(){\n      if (this.files){\n        this.datasetFile = new FormData();\n        for (var i=0; i<this.files.length; i++){\n          this.datasetFile.append(\"file\", this.files[i])\n        }\n      \n    \n      this.axios({\n        method: \"post\",\n        url: this.url + \"upload?collection=\"+this.metadata.id,\n        data:this.datasetFile,\n        headers: {'Content-Type': 'multipart/form-data' }\n      }).then(response => {\n        if (response)\n          this.displaySuccess(\"File uploaded\")\n          this.loadData();\n          this.datasetFileInput = \"\";\n          \n      }) \n      \n      .catch((error) => {\n        this.displayError(\"An error has occured:\" + error)\n        console.log(error)\n        \n        })\n      .finally(() => {\n          this.loading = false\n      });\n    }\n    },\n    \n\n    displayError(message){\n        this.notifierMessage = message\n        this.notifierColor = 'error'\n          this.timeout=2000\n          this.notifier = true\n    },\n\n    displaySuccess(message){\n        this.notifierMessage = message\n        this.notifierColor = 'success'\n        this.timeout=2000\n        this.notifier = true\n    }\n\n  }\n}\n</script>\n"]}]}
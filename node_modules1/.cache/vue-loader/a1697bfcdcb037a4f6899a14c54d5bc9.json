{"remainingRequest":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-visualisation-block/opse-visualisation-block.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/src/lib/modules/opse-visualisation-block/opse-visualisation-block.vue","mtime":1646992089243},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/openopse/Documents/GitHub/Catalogue Sedoo/projets/opse-metadatabloc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["opse-visualisation-block.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"opse-visualisation-block.vue","sourceRoot":"src/lib/modules/opse-visualisation-block","sourcesContent":["<i18n  >\n{\n  \"en\": {\n    \"bvetAccessData\": \"Data access\",\n    \"explicationText\": \"Select the years you want to download.\",\n    \"explicationParameters\": \"Select the parameters you want to donwload (all parameters are selected by default).\",\n    \"selectionError\": \"Select at least one parameter\",\n    \"year\": \"Year\",\n    \"parameter\": \"Parameter\",\n    \"downloadSelected\": \"Download selected years\",\n    \"downloadAll\": \"Download All years\",\n    \"blocTitle\": \"Time series\",\n    \"downloadingData\": \"Download progression\",\n    \"loadingYears\": \"Loading year details\",\n    \"PREPARING_REQUEST\": \"Sending request\",\n    \"COLLECTING_DATA\": \"Collecting data\",\n    \"PROCESSING_DATA\": \"Processing data\",\n    \"GENERATING_ARCHIVE_DATA\": \"Generating data archive\",\n\n    \"dataAreReady\": \"Your data are now ready to be retrieved\",\n    \"cancel\": \"Cancel\"\n  },\n  \"fr\": {\n     \"downloadSelected\": \"Télécharger la sélection\",\n    \"downloadAll\": \"Télécharger\",\n    \"bvetAccessData\": \"Accès aux données\",\n    \"explicationText\": \"Selectionnez les années que vous voulez télécharger (tous les paramètres sont sélectionés par défaut).\",\n    \"explicationParameters\": \"Selectionnez les paramètres que vous voulez télécharger.\",\n    \"selectionError\": \"Selectionez au moins un paramètre\",\n    \"year\": \"Année\",\n    \"parameter\": \"Paramètre\",\n    \"blocTitle\": \"Séries temporelles\",\n    \"downloadingData\": \"Progression du téléchargement\",\n    \"loadingYears\": \"Chargement des détails des années\",\n    \"PREPARING_REQUEST\": \"Envoi de la requête\",\n    \"COLLECTING_DATA\": \"Collecte des données\",\n    \"PROCESSING_DATA\": \"Traitement des données\",\n    \"GENERATING_ARCHIVE_DATA\": \"Génération de l'archive\",\n    \"dataAreReady\": \"Les données sont prêtes à être récupérées\",\n    \"cancel\": \"Annuler\"\n  }\n}\n</i18n>\n<template>\n  <span>\n    <v-card v-if=\"isVisible\" :style=\"applyTheme\" :flat=\"true\">\n      <v-card-title>\n        <v-icon large left style=\"color: #f39c12\"\n          >mdi-chart-timeline-variant</v-icon\n        >\n        <span>{{ $t(\"blocTitle\") }}</span>\n      </v-card-title>\n      <v-card-text v-if=\"years.length > 0\">\n        <!-- <div v-if=\"locations.length==0\">\n    No location\n  </div> -->\n        <div>\n          <section v-if=\"hasNamedParameters\">\n            <div class=\"text-h6\">Parameters</div>\n            <v-btn\n              small\n              class=\"mr-2 mt-2\"\n              :color=\"isselectedparams(parameter)? 'primary' : 'default'\"\n              v-for=\"parameter in parameters\"\n              :key=\"parameter\"\n              @click=\"selectParameter(parameter)\"\n              >{{ parameter }}</v-btn\n            >\n          </section>\n          <section v-if=\"hasNamedYears\">\n            <div class=\"text-h6\">Years</div>\n            <v-btn\n              small\n              class=\"mr-2 mt-2\"\n              :color=\"year == selectedYear ? 'primary' : 'default'\"\n              v-for=\"year in years\"\n              :key=\"year\"\n              @click=\"selectYear(year)\"\n              >{{ year }}</v-btn\n            >\n          </section>\n\n          <section class=\"py-2\" v-if=\"loadingData\">\n            <v-progress-linear :indeterminate=\"true\"></v-progress-linear>\n            <div>\n              Loading data:\n\n              <span v-if=\"selectedParameters.length > 0\"\n                >Parameter {{ selectedParameters }}</span\n              >\n              <span\n                v-if=\"\n                  selectedParameters.length > 0 && ('' + selectedYear).length > 0\n                \"\n              >\n                -\n              </span>\n              <span v-if=\"('' + selectedYear).length > 0\"\n                >Year {{ selectedYear }}</span\n              >\n            </div>\n          </section>\n          <section class=\"py-2\" v-else>\n            <vue-highcharts\n              :highcharts=\"Highcharts\"\n              :options=\"chartOptions\"\n            ></vue-highcharts>\n          </section>\n        </div>\n      </v-card-text>\n      <v-card-text v-else>\n        Visualisation has not been implemented yet for this dataset.\n      </v-card-text>\n    </v-card>\n  </span>\n</template>\n\n<script>\nimport { applyPrimaryAndSecondaryColors } from \"../../utils\";\nimport VueHighcharts from \"vue2-highcharts\";\nimport Highcharts from \"highcharts/highstock\";\nimport Exporting from \"highcharts/modules/exporting\";\nExporting(Highcharts);\nexport default {\n  name: \"opse-visualisation-block\",\n  components: {\n    VueHighcharts,\n  },\n  data() {\n    return {\n      loading: false,\n      Highcharts: Highcharts,\n      loadingData: false,\n      locations: [],\n      selectedLocation: \"\",\n      parameters: [],\n      selectedParameters: null,\n      selectedYear: \"\",\n      years: [],\n      pivots: [],\n      chartOptions: null,\n    };\n  },\n\n  props: {\n    language: {\n      type: String,\n      default: \"en\",\n    },\n    theme: {\n      type: Object,\n      default: () => {\n        return {\n          primaryColor: \"#F39C12\",\n          secondaryColor: \"#AAA\",\n        };\n      },\n    },\n\n    metadata: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  computed: {\n    applyTheme() {\n      return applyPrimaryAndSecondaryColors(this.theme);\n    },\n\n    hasNamedParameters() {\n      if (this.parameters == null) {\n        return false;\n      }\n      if (this.parameters.length == 0) {\n        return false;\n      }\n      for (let i = 0; i < this.parameters.length; i++) {\n        if (this.parameters[i].length > 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    hasNamedYears() {\n      if (this.years == null) {\n        return false;\n      }\n      if (this.years.length == 0) {\n        return false;\n      }\n      return true;\n    },\n\n    isVisible() {\n      let isVisible = true;\n      let url = this.computeUrl();\n      if (!url) {\n        isVisible == false;\n      }\n      this.$emit(\"getVisibility\", {\n        name: this.$options.name,\n        programmaticScrollingTitle: this.$t(\"blocTitle\"),\n        isVisible,\n      });\n      console.log('isvisible value',isVisible);\n      return isVisible;\n    },\n  },\n\n  watch: {\n    metadata() {\n      //this.loadLocations();\n      this.loadYears()\n    },\n\n    language(value) {\n      this.$i18n.locale = value;\n    },\n  },\n\n  mounted() {\n    this.$i18n.locale = this.language;\n    //this.loadLocations();\n    this.loadYears()\n  },\n\n  methods: {\n\n    selectParameter(parameter) {\n      if (this.selectedParameters.includes(parameter)) {\n        this.selectedParameters = this.selectedParameters.filter(function (\n          ele\n        ) {\n          return ele != parameter;\n        });\n      } else {\n        this.selectedParameters.push(parameter);\n      }\n      console.log(this.selectedParameters)\n      this.loadData();\n      /*\n      this.years = parameter.years;\n      if (this.years && this.years.length > 0) {\n        this.selectYear(this.years[0]);\n      } else {\n        this.loadData();\n      }*/\n    },\n\n    selectYear(year) {\n      this.selectedYear = year;\n      this.loadData();\n    },\n\n    loadData() {\n      this.loadingData = true;\n      let url = this.computeUrl();\n      if (!url) {\n        return;\n      }\n      if (!url.endsWith(\"/\")) {\n        url = url + \"/\";\n      }\n      url = url + \"data/v1_0/json?uuid=\" + this.metadata.id;\n      if ((\"\" + this.selectedYear).length > 0) {\n        url = url + \"&year=\" + this.selectedYear;\n      }\n      if (this.selectedParameters && this.selectedParameters.length > 0) {\n        url = url + \"&param=\" + this.selectedParameters.join(\"___\");\n      }\n      this.axios({\n        method: \"get\",\n        url: url,\n      })\n      \n        .then((response) => {\n          //   let timeserie = {\n          // x: [],\n          // y: [],\n          // type:\"scatter\"\n          //   }\n\n          let data = [];\n          let keys = [];\n          let values = [];\n\n          let series = [];\n          let serievalues = {};\n\n          for (let i = 0; i < response.data.length; i++) {\n            let aux = [];\n            aux.push(Date.parse(response.data[i].ts));\n            aux.push(parseFloat(response.data[i].f.value));\n            data.push(aux);\n          }\n\n          for (let i = 0; i < response.data.entries.length; i++) {\n            keys = response.data.entries[i].key\n            values = response.data.entries[i].data\n            let datas = [];\n            for(let j =0; j<keys.length; j++){\n              let aux = [];\n              aux.push(Date.parse(keys[j]));\n              aux.push(parseFloat(values[j]));\n              datas.push(aux);\n            }\n            serievalues.name = response.data.entries[i].name;\n            serievalues.data = datas;\n            \n            series.push({...serievalues});\n            \n          }\n          console.log(series)\n\n          let chartOptions = {\n            rangeSelector: {\n              inputEnabled: false,\n              buttons: [\n                {\n                  type: \"month\",\n                  count: 3,\n                  text: \"3m\",\n                },\n                {\n                  type: \"year\",\n                  count: 1,\n                  text: \"1y\",\n                },\n                {\n                  type: \"all\",\n                  text: \"All\",\n                },\n              ],\n            },\n            title: {\n              text: \"\",\n            },\n            xAxis: {\n              type: \"datetime\",\n              title: {\n                text: null,\n              },\n            },\n            yAxis: {\n              title: {\n                text: null,\n              },\n            },\n            series: series,\n          };\n          this.chartOptions = chartOptions;\n        })\n        .catch((error) => {\n          // this.displayError(\"An error has occured:\" + error)\n\n          console.log(error);\n        })\n        .finally(() => {\n          this.loadingData = false;\n        });\n    },\n\n    computeUrl() {\n      let url = null;\n      if (\n        this.metadata &&\n        this.metadata.links &&\n        this.metadata.links.length > 0\n      ) {\n        for (let i = 0; i < this.metadata.links.length; i++) {\n          if (this.metadata.links[i].type == \"OPENSEARCH_LINK\") {\n            url = this.metadata.links[i].url;\n            break;\n          }\n        }\n      }\n      console.log(url)\n      return url;\n    },\n    loadYears() {\n      let url = null;\n      if (\n        this.metadata &&\n        this.metadata.links &&\n        this.metadata.links.length > 0\n      ) {\n        for (let i = 0; i < this.metadata.links.length; i++) {\n          if (this.metadata.links[i].type == \"OPENSEARCH_LINK\") {\n            url = this.metadata.links[i].url;\n            break;\n          }\n        }\n      }\n      this.url = url;\n      if (url == null) {\n        return;\n      }\n\n      this.loading = true;\n      console.log(\n        \"url \",\n        this.url +\n          \"data/v1_0/request1?collection=\" +\n          this.metadata.id +\n          \"&folder=/data/csv\"\n      );\n      this.axios({\n        method: \"get\",\n        url:\n          this.url +\n          \"data/v1_0/request1?collection=\" +\n          this.metadata.id +\n          \"&folder=/data/csv\"\n        //url: this.url + \"/request?collection=\"+this.metadata.id,\n      })\n        .then((response) => {\n          this.years = [];\n          this.parameters = [];\n          this.selectedParameters = []\n          this.pivots = [];\n          console.log(\"Response\", response.data);\n\n          for (let i = 0; i < response.data.entries.length; i++) {\n            this.years.push(response.data.entries[i].date.substring(0, 4));\n          }\n          for (let i = 0; i < response.data.pivots.length; i++) {\n            this.pivots.push(response.data.pivots[i].name);\n          }\n          for (let i = 0; i < response.data.parameters.length; i++) {\n            if (\n              !this.pivots.includes(response.data.parameters[i].name)\n            ) {\n              this.parameters.push(response.data.parameters[i].name);\n            }\n          }\n\n          //console.log(this.years);\n          if (this.years.length > 0) {\n            this.selectYear(this.years[0]);\n          }\n          if (this.parameters.length > 0) {\n            this.selectParameter(this.parameters[0]);\n          }\n        }\n        \n        )\n        .catch((error) => {\n          // this.displayError(\"An error has occured:\" + error)\n          console.log(error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  isselectedparams(param){\n    let value = false;\n    for (let i = 0; i < this.selectedParameters.length; i++){\n      if(param == this.selectedParameters[i])\n      value =  true;\n    }\n    //console.log(this.selectedParameters);\n    //console.log(\"voici la value\",value);\n    //console.log(\"voici la parametre\",param);\n    return value;\n  }\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}